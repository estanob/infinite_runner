{"version":3,"file":"./lib/bundle.js","mappings":";;;;;;;;;AAAA,aAAa,mBAAO,CAAC,gCAAW;AAChC,eAAe,mBAAO,CAAC,oCAAa;AACpC,cAAc,mBAAO,CAAC,kCAAY;;AAElC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,kBAAkB,qBAAqB;AACvC,iCAAiC,YAAY;AAC7C;AACA;;AAEA;AACA,kBAAkB,yBAAyB;AAC3C,qCAAqC,YAAY;AACjD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,uBAAuB;AACzC,oBAAoB,uBAAuB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,QAAQ;AACpC,MAAM;;AAEN,mCAAmC,oBAAoB,GAAG;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtCA;AACA;AACA;;AAEA,oCAAoC;AACpC;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,iBAAiB,mBAAO,CAAC,0CAAgB;AACzC,aAAa,mBAAO,CAAC,gCAAW;;AAEhC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC,E","sources":["webpack://js_game/./lib/game.js","webpack://js_game/./lib/game_view.js","webpack://js_game/./lib/shark.js","webpack://js_game/./lib/surfer.js","webpack://js_game/./lib/util.js","webpack://js_game/webpack/bootstrap","webpack://js_game/./lib/infinite_runner.js"],"sourcesContent":["const Util = require('./util.js');\nconst Surfer = require('./surfer.js');\nconst Shark = require('./shark.js');\n\nconst Game = function() {\n  this.sharks = [];\n  this.whirlpools = [];\n\n  this.addSharks();\n}\n\nGame.DIM_X = window.innerWidth;\nGame.DIM_Y = window.innerHeight;\nGame.NUM_SHARKS = 10;\nGame.NUM_WHIRLPOOLS = 10; \n\nGame.prototype.moveSharks = function (delta) {\n  this.allObjects().forEach(object => {\n    object.move(delta);\n  })\n}\n\nGame.prototype.addSurfer = function () {\n  const surfer = new Surfer({\n    pos: [0, 0],\n    game: this,\n  });\n\n  return surfer;\n};\n\nGame.prototype.addSharks = function () {\n  for (let i = 0; i < Game.NUM_SHARKS; i++) {\n    this.sharks.push(new Shark({ game: this }));\n  };\n};\n\nGame.prototype.addWhirlpools = function () {\n  for (let i = 0; i < Game.NUM_WHIRLPOOLS; i++) {\n    this.sharks.push(new Whirlpool({ game: this }));\n  };\n};\n\nGame.prototype.draw = function (ctx) {\n  ctx.clearRect(0, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRect(0, 0, Game.DIM_X, Game.DIM_Y);\n\n  this.allObjects().forEach(object => {\n    object.draw(ctx)\n  })\n\n  ctx.clearRect(Game.DIM_X, 0, Game.DIM_X, Game.DIM_Y);\n  ctx.clearRect(0, Game.DIM_Y, Game.DIM_X * 2, Game.DIM_Y);\n};\n\nGame.prototype.allObjects = function () {\n  return [].concat(this.sharks, this.whirlpools);\n};\n\nGame.prototype.step = function (delta) {\n  this.moveSharks(delta);\n  this.checkCrash();\n};\n\nGame.prototype.checkCrash = function () {\n  const allObjects = this.allObjects();\n\n  for (let i = 0; i < allObjects.length; i++) {\n    for (let j = 0; j < allObjects.length; j++) {\n      const obj1 = allObjects[i];\n      const obj2 = allObjects[j];\n\n      if (obj1.crashedWith(obj2)) {\n        const crash = obj1.crashWith(obj2);\n        if (crash) {\n          return;\n        };\n      };\n    };\n  };\n};\n\nmodule.exports = Game;","const GameView = function (game, ctx) {\n  this.ctx = ctx;\n  this.game = game;\n  this.surfer = this.game.addSurfer();\n};\n\nGameView.MOVES = {\n  \"up\": [0, 1],\n  \"down\": [0, -1],\n};\n\n// GameView.prototype.bindKeyHandlers = function () {\n//   const surfer = this.surfer;\n\n//   Object.keys(GameView.MOVES).forEach(k => {\n//     let move = GameView.MOVES[k];\n//     key(k, function () { surfer.})\n//   })\n\n//   // key(\"space\", function () { surfer.waterBend() }); //use to push sharks out of the way\n// };\n\nGameView.prototype.start = function () {\n  this.bindKeyHandlers();\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nGameView.prototype.animate = function (time) {\n  const delta = time - this.lastTime;\n\n  this.game.step(delta);\n  this.game.draw(this.ctx);\n  this.lastTime = time;\n\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nmodule.exports = GameView;","const DEFAULTS = {\n  SPEED: 1,\n};\n\nconst Shark = function (options = {}) {\n  options.pos = options.pos || options.game.randomPosition();\n  options.vel = options.vel || Util.randomVec(DEFAULTS.SPEED);\n\n  MovingObject.call(this, options);\n};\n\nmodule.exports = Shark;","const DEFAULTS = {\n  CHARACTER_WIDTH: 90,\n  CHARACTER_HEIGHT: 100,\n  CHARACTER: [\"Aang\", \"Kuruk\", \"Korra\"]\n};\n\nlet Surfer = function (options) {\n  options.character = DEFAULTS.CHARACTER.random(),\n  options.vel = options.vel || [0,0];\n}\n\nSurfer.prototype.bounds = function () {\n  return {\n    left: this.x,\n    right: this.x + DEFAULTS.CHARACTER_WIDTH,\n    top: this.y,\n    bottom: this.y + DEFAULTS.CHARACTER_HEIGHT,\n  };\n};\n\nmodule.exports = Surfer;","const Util = {\n  dir (vec) {\n    var norm = Util.norm(vec);\n    return Util.scale(vec, 1 / norm);\n  },\n\n  dist (pos1, pos2) {\n    return Math.sqrt(\n      Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n    );\n  },\n};\n\nmodule.exports = Util;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const GameView = require('./game_view.js');\nconst Game = require('./game.js');\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  const canvasEl = document.getElementsByTagName(\"canvas\")[0];\n  canvasEl.height = window.innerHeight - 100;\n  canvasEl.width = window.innerWidth - 100;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const g = new Game();\n  new GameView(g, ctx).start();\n});"],"names":[],"sourceRoot":""}